include : Language

file start : GLS
    class start : GLSC
        class member variable declare : Languages private { dictionary type : string Language }
        class member variable declare : SearchEnds private { dictionary type : string Language }

        class constructor start : GLSC
            class member variable set : { this } Languages { dictionary initialize : string string }
            class member variable set incomplete : { this } SearchEnds { dictionary initialize start : string string }
                dictionary initialize key : (" ") (" ") ,
                dictionary initialize key : "{" "}" ,
                dictionary initialize key : "(" ")" 
            dictionary initialize end
        class constructor end


        comment block : (Private utilities)

        class member function start : GLSC private generateTabs string numTabs number
            variable declare : numTabsActual number { operation : numTabs times 4 }
            variable declare : output string ""
            variable declare : i number

            for numbers start : i 0 lessthan numTabsActual
                operation : output increaseby (" ")
            for end

            return : output
        class member function end

        class member function start : GLSC private isStringSpace boolean text string
            variable declare : i number
            for numbers start : i 0 lessthan { native call : string length text }
                if start : { not : { class member function call : { this } isCharacterSpace { array get item : text i } } }
                    return : false
                if end
            for end

            return : true
        class member function end
    class end
file end